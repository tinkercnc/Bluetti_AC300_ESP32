#ifndef __DEVICE_TYPE_H__
#define __DEVICE_TYPE_H__
#include "Arduino.h"

enum field_types{
   UINT_FIELD,
   BOOL_FIELD,
   ENUM_FIELD,
   STRING_FIELD,
   DECIMAL_ARRAY_FIELD,
   DECIMAL_FIELD,
   HEX_FIELD,
   HEX_ARRAY_FIELD,
   VERSION_FIELD,
   SN_FIELD, 
   TYPE_UNDEFINED
};

enum field_names {
  DC_OUTPUT_POWER,
  DC_OUTPUT_ON,
  AC_OUTPUT_POWER,
  AC_OUTPUT_ON,
  POWER_GENERATION,
  TOTAL_BATTERY_PERCENT, 
  DC_INPUT_POWER,
  AC_INPUT_POWER,
  SERIAL_NUMBER,
  ARM_VERSION,
  DSP_VERSION,
  DEVICE_TYPE, 
  FIELD_UNDEFINED,
  AC_OUTPUT_MODE,
  INTERNAL_AC_VOLTAGE,
  INTERNAL_CURRENT_1,
  INTERNAL_POWER_1,
  INTERNAL_AC_FREQ,
  INTERNAL_CURRENT_2,
  INTERNAL_POWER_2,
  AC_INPUT_VOLTAGE,
  INTERNAL_CURRENT_3,
  INTERNAL_POWER_3,
  AC_INPUT_FREQ,
  INTERNAL_DC_INPUT_VOLTAGE,
  INTERNAL_DC_INPUT_POWER,
  INTERNAL_DC_INPUT_CURRENT,
  PACK_NUM_MAX, 
  PACK_NUM,     
  PACK_VOLTAGE, 
  PACK_BATTERY_PERCENT,
  CELL_VOLTAGES,
  PACK_BMS_VERSION,
  UPS_MODE,
  SPLIT_PHASE_ON,
  SPLIT_PHASE_MACHINE_MODE,
  GRID_CHARGE_ON,
  TIME_CONTROL_ON,
  BATTERY_RANGE_START,
  BATTERY_RANGE_END,
  BLUETOOTH_CONNECTED,
  AUTO_SLEEP_MODE,
  MODBUS_ERROR,
  GEN_ERROR,
  RANGE_ERROR,
  PACK_TEMPERATURE,
  DEBUG_DATA,
  BAT_UK1,
  BAT_UK2,
  BAT_UK3,
  BAT_UK4,
  BAT_UK5,
  BAT_UK6,
};

typedef struct device_field_data {
  enum field_names f_name;
  uint8_t f_AddrHighByte;
  uint8_t f_AddrLowByte;
  int8_t f_size;
  int8_t f_scale;
  int8_t f_enum;
  enum field_types f_type;
} device_field_data_t;


#endif
